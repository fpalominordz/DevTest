{"version":3,"sources":["../../src/graphql/schema.js"],"names":["typeDefs","gql"],"mappings":";;;;;;;;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,QAAQ,OAAGC,iBAAH,oBAAd;eA0EeD,Q","sourcesContent":["\r\nimport { gql } from 'apollo-server';\r\n\r\nconst typeDefs = gql`\r\ndirective @AuthDirective on QUERY | FIELD_DEFINITION | FIELD\r\nscalar Date\r\n\r\ntype Book {\r\n  title: String\r\n  author: String\r\n}\r\n\r\ntype Token {\r\n  token: String\r\n}\r\n\r\ntype Comment {\r\n  _id: ID\r\n  comment: String\r\n  isActive: Boolean\r\n  postID: ID\r\n  authorID: ID\r\n  createdAt: Date\r\n  updatedAt: Date\r\n}\r\n\r\ntype User {\r\n  name: String\r\n  lastName: String\r\n  email: String\r\n  gender: String\r\n  posts: [Post]\r\n}\r\n\r\ninput UserInput {\r\n  name: String\r\n  lastName: String\r\n  email: String\r\n  gender: String\r\n  password: String\r\n  profileImage: Upload\r\n}\r\n\r\ntype Post {\r\n  _id: ID\r\n  title: String\r\n  content: String\r\n  likes: Int\r\n}\r\n\r\ninput PostInput {\r\n  title: String\r\n  content: String\r\n  likes: Int\r\n}\r\n\r\ninput CommentInput {\r\n  comment: String\r\n  postID: ID\r\n}\r\n\r\ntype Query {\r\n  books: [Book] @AuthDirective\r\n  getPostComments(postID: String): [Comment] @AuthDirective\r\n  getUserData : User @AuthDirective\r\n}\r\n\r\ntype Mutation {\r\n  addUser(data: UserInput) : Token\r\n  addPost(postInfo: PostInput) : Post @AuthDirective\r\n  addComment(commentData: CommentInput) : Comment @AuthDirective\r\n  doLogin(userName: String, password: String) : Token\r\n  updateComment(comment: String, commentID: ID) : Comment @AuthDirective\r\n  delteComment(commentID: ID) : Comment @AuthDirective\r\n}\r\n`;\r\n\r\nexport default typeDefs;\r\n"],"file":"schema.js"}