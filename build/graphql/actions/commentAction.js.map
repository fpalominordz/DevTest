{"version":3,"sources":["../../../src/graphql/actions/commentAction.js"],"names":["addCommentAction","commentData","authorID","commentIfo","CommentModel","create","console","log","updateCommentAction","filter","update","findOneAndUpdate","updateContentCommentAction","comment","commentID","_id","$set","deleteCommentAction","isActive","geCommentsFromPostAction","postID","find"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,WAAP,EAAoBC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfC,YAAAA,UAFe,qBAGhBF,WAHgB;AAInBC,cAAAA,QAAQ,EAARA;AAJmB;AAAA;AAAA,mBAORE,qBAAaC,MAAb,CAAoBF,UAApB,CAPQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AASrBG,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AATqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBP,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;;;AAaA,IAAMQ,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOC,MAAP,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEXN,qBAAaO,gBAAb,CAA8BF,MAA9B,EAAsCC,MAAtC,EAA8C;AAAE,qBAAK;AAAP,aAA9C,CAFW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIxBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBC,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;;;AAQA,IAAMI,0BAA0B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOC,OAAP,EAAgBC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzBL,YAAAA,MAFyB,GAEhB;AAAEM,cAAAA,GAAG,EAAED;AAAP,aAFgB;AAGzBJ,YAAAA,MAHyB,GAGhB;AAAEM,cAAAA,IAAI,EAAE;AAAEH,gBAAAA,OAAO,EAAPA;AAAF;AAAR,aAHgB;AAAA;AAAA,mBAIlBL,mBAAmB,CAACC,MAAD,EAASC,MAAT,CAJD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAM/BJ,YAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;;AAN+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA1BK,0BAA0B;AAAA;AAAA;AAAA,GAAhC;;;;AAUA,IAAMK,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOH,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBL,YAAAA,MAFkB,GAET;AAAEM,cAAAA,GAAG,EAAED;AAAP,aAFS;AAGlBJ,YAAAA,MAHkB,GAGT;AAAEM,cAAAA,IAAI,EAAE;AAAEE,gBAAAA,QAAQ,EAAE;AAAZ;AAAR,aAHS;AAAA;AAAA,mBAIXV,mBAAmB,CAACC,MAAD,EAASC,MAAT,CAJR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMxBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBU,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;;;AAUA,IAAME,wBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEhBhB,qBAAaiB,IAAb,CAAkB;AAAED,cAAAA,MAAM,EAANA,MAAF;AAAUF,cAAAA,QAAQ,EAAE;AAApB,aAAlB,CAFgB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAI7BZ,YAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AAJ6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAxBY,wBAAwB;AAAA;AAAA;AAAA,GAA9B","sourcesContent":["import { CommentModel } from '../../dataBase/models';\r\n\r\nconst addCommentAction = async (commentData, authorID) => {\r\n  try {\r\n    const commentIfo = {\r\n      ...commentData,\r\n      authorID,\r\n    };\r\n\r\n    return await CommentModel.create(commentIfo);\r\n  } catch (error) {\r\n    console.log(\"TCL: addCommentAction -> error\", error)\r\n  }\r\n};\r\n\r\nconst updateCommentAction = async (filter, update) => {\r\n  try {\r\n    return await CommentModel.findOneAndUpdate(filter, update, { new: true });\r\n  } catch (error) {\r\n    console.log(\"TCL: updateUserAction -> error\", error)\r\n  }\r\n};\r\n\r\nconst updateContentCommentAction = async (comment, commentID) => {\r\n  try {\r\n    const filter = { _id: commentID };\r\n    const update = { $set: { comment } };\r\n    return await updateCommentAction(filter, update);\r\n  } catch (error) {\r\n    console.log(\"TCL: updateContentCommentAction -> error\", error)\r\n  }\r\n}\r\n\r\nconst deleteCommentAction = async (commentID) => {\r\n  try {\r\n    const filter = { _id: commentID };\r\n    const update = { $set: { isActive: false } };\r\n    return await updateCommentAction(filter, update);\r\n  } catch (error) {\r\n    console.log(\"TCL: deleteCommentAction -> error\", error)\r\n  }\r\n};\r\n\r\nconst geCommentsFromPostAction = async (postID) => {\r\n  try {\r\n    return await CommentModel.find({ postID, isActive: true });\r\n  } catch (error) {\r\n    console.log(\"TCL: geCommentsFromPostAction -> error\", error)\r\n  }\r\n}\r\n\r\nexport {\r\n  addCommentAction,\r\n  updateCommentAction,\r\n  updateContentCommentAction,\r\n  deleteCommentAction,\r\n  geCommentsFromPostAction,\r\n}"],"file":"commentAction.js"}