{"version":3,"sources":["../../../src/graphql/actions/authActions.js"],"names":["AuthDirective","field","resolve","defaultFieldResolver","args","ctx","user","apply","AuthenticationError","SchemaDirectiveVisitor","getContext","req","token","headers","authorization","undefined","jwt","verify","process","env","JWT","error","result","_id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;IAKMA,a;;;;;;;;;;;;yCACiBC,K,EAAO;AAAA,2BACiBA,KADjB,CAClBC,OADkB;AAAA,UAClBA,OADkB,+BACRC,oBADQ;AAE1BF,MAAAA,KAAK,CAACC,OAAN;AAAA;AAAA;AAAA;AAAA,mCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmBE,IAAnB;AAAmBA,kBAAAA,IAAnB;AAAA;;AACRC,gBAAAA,GADQ,GACFD,IAAI,CAAC,CAAD,CADF;;AAAA,qBAEVC,GAAG,CAACC,IAFM;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGCJ,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBH,IAApB,CAHD;;AAAA;AAAA;;AAAA;AAAA,sBAKN,IAAII,wCAAJ,CAAwB,gDAAxB,CALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB;AAQD;;;EAXyBC,2C;;;;AAc5B,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC1B,MAAI;AACF,QAAMC,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAYC,aAA1B;AACA,QAAI,yBAAOF,KAAP,cAAwBG,SAAxB,0DAAwBA,SAAxB,EAAJ,EAAuC,OAAOJ,GAAP;AAEvC,WAAOK,yBAAIC,MAAJ,CACLL,KADK,EAELM,OAAO,CAACC,GAAR,CAAYC,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA,mCAGL,kBAAgBC,KAAhB,EAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMD,KADN;AAAA;AAAA;AAAA;;AAAA,kDACoBV,GADpB;;AAAA;AAAA;AAAA;AAAA,uBAGuB,kCAAe;AAAEY,kBAAAA,GAAG,EAAED,MAAM,CAACC;AAAd,iBAAf,CAHvB;;AAAA;AAGUjB,gBAAAA,IAHV;AAAA,oEAIgBK,GAJhB;AAIqBL,kBAAAA,IAAI,EAAJA;AAJrB;;AAAA;AAAA;AAAA;AAAA,kDAMWK,GANX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHK;;AAAA;AAAA;AAAA;AAAA,QAAP;AAYD,GAhBD,CAgBE,OAAOU,KAAP,EAAc;AACd,WAAOV,GAAP;AACD;AACF,CApBD","sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nimport { findUserAction } from './usersActions';\r\n\r\nimport {\r\n  SchemaDirectiveVisitor,\r\n  AuthenticationError,\r\n} from 'apollo-server-express';\r\n\r\nclass AuthDirective extends SchemaDirectiveVisitor {\r\n  visitFieldDefinition(field) {\r\n    const { resolve = defaultFieldResolver } = field;\r\n    field.resolve = async function (...args) {\r\n      const ctx = args[2];\r\n      if (ctx.user) {\r\n        return await resolve.apply(this, args);\r\n      } else {\r\n        throw new AuthenticationError(\"necesitas estar estar logueado para hacer esto\");\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nconst getContext = (req) => {\r\n  try {\r\n    const token = req.headers.authorization;\r\n    if (typeof token === typeof undefined) return req;\r\n\r\n    return jwt.verify(\r\n      token,\r\n      process.env.JWT,\r\n      async function (error, result) {\r\n        if (error) return req;\r\n        try {\r\n          const user = await findUserAction({ _id: result._id })\r\n          return { ...req, user };\r\n        } catch (error) {\r\n          return req;\r\n        }\r\n      })\r\n  } catch (error) {\r\n    return req;\r\n  }\r\n}\r\n\r\nexport {\r\n  getContext,\r\n  AuthDirective\r\n}"],"file":"authActions.js"}