{"version":3,"sources":["../../src/graphql/resolvers.js"],"names":["books","title","author","resolvers","Query","getPostComments","parent","data","context","info","postID","console","log","getUserData","user","Mutation","addUser","profileImage","createReadStream","stream","url","userIfo","addPost","postInfo","newPost","filter","_id","update","$push","doLogin","userName","password","addComment","commentData","updateComment","comment","commentID","delteComment"],"mappings":"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","sourcesContent":["\r\nimport {\r\n  addUserAction,\r\n  updateUserAction,\r\n  doLoginAction,\r\n  getUserDataAction\r\n} from './actions/usersActions';\r\n\r\nimport {\r\n  addPostAction\r\n} from './actions/postsActions';\r\n\r\nimport {\r\n  addCommentAction,\r\n  updateContentCommentAction,\r\n  deleteCommentAction,\r\n  geCommentsFromPostAction,\r\n} from './actions/commentAction';\r\n\r\nimport { storeUpload } from '../graphql/actions/utils/uploader';\r\n\r\nconst books = [\r\n  {\r\n    title: 'Harry Potter and the Chamber of Secrets',\r\n    author: 'J.K. Rowling'\r\n  },\r\n  {\r\n    title: 'Jurassic Park',\r\n    author: 'Michael Crichton'\r\n  }\r\n];\r\n\r\nconst resolvers = {\r\n  Query: {\r\n    books: () => books,\r\n    getPostComments: async (parent, data, context, info) => {\r\n      try {\r\n        const { postID } = data;\r\n        return geCommentsFromPostAction(postID);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    },\r\n    getUserData: async (parent, data, context, info) => {\r\n      try {\r\n        const { user } = context;\r\n        return await getUserDataAction(user);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    },\r\n  },\r\n  Mutation: {\r\n    addUser: async (parent, { data }, context, info) => {\r\n      try {\r\n        // sube el archivo\r\n        const { createReadStream } = await data.profileImage;\r\n        const stream = createReadStream();\r\n        const { url } = await storeUpload(stream, 'video');\r\n\r\n        // registra usario\r\n        const userIfo = {\r\n          ...data,\r\n          profileImage: url,\r\n        }\r\n\r\n        return await addUserAction(userIfo);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    },\r\n    addPost: async (parent, data, context, info) => {\r\n      try {\r\n        const { postInfo } = data;\r\n        const { user } = context;\r\n        const newPost = await addPostAction(postInfo);\r\n        const filter = { _id: user._id };\r\n        const update = { $push: { 'posts': newPost._id } };\r\n        await updateUserAction(filter, update);\r\n        return newPost;\r\n      } catch (error) {\r\n\r\n      }\r\n    },\r\n    doLogin: async (parent, data, context, info) => {\r\n      try {\r\n        const { userName, password } = data;\r\n        return await doLoginAction(userName, password);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    },\r\n    addComment: async (parent, data, context, info) => {\r\n      try {\r\n        const { user } = context;\r\n        const { commentData } = data;\r\n        return await addCommentAction(commentData, user._id);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    },\r\n    updateComment: async (parent, data, context, info) => {\r\n      try {\r\n        const { comment, commentID } = data;\r\n        return await updateContentCommentAction(comment, commentID);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    },\r\n    delteComment: async (parent, data, context, info) => {\r\n      try {\r\n        const { commentID } = data;\r\n        return await deleteCommentAction(commentID);\r\n      } catch (error) {\r\n        console.log(\"TCL: error\", error)\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// parent: funciones necesarias para interno de graphql\r\n// data: argumentos de la funcion resolver\r\n// context: variables globales entre resolvers\r\n// info: informacion del user agent\r\n\r\nexport default resolvers;\r\n"],"file":"resolvers.js"}